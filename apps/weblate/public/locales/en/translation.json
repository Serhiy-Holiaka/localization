{
    "column-one": "React (also known as React.js or ReactJS) is a free and open-source front-end JavaScript library that aims to make building user interfaces based on components more \"seamless\". It is maintained by Meta (formerly Facebook) and a community of individual developers and companies. React can be used to develop single-page, mobile, or server-rendered applications with frameworks like Next.js and Remix[a]. Because React is only concerned with the user interface and rendering components to the DOM, React applications often rely on libraries for routing and other client-side functionality. A key advantage of React is that it only re-renders those parts of the page that have changed, avoiding unnecessary re-rendering of unchanged DOM elements. (Weblate version)",
    "column-three": "TypeScript (abbreviated as TS) is a free and open-source high-level programming language developed by Microsoft that adds static typing with optional type annotations to JavaScript. It is designed for the development of large applications and transpiles to JavaScript.\n\nTypeScript may be used to develop JavaScript applications for both client-side and server-side execution (as with Node.js, Deno or Bun). Multiple options are available for transpilation. The default TypeScript Compiler can be used, or the Babel compiler can be invoked to convert TypeScript to JavaScript.\n\nTypeScript supports definition files that can contain type information of existing JavaScript libraries, much like C++ header files can describe the structure of existing object files. ",
    "column-two": "Next.js is an open source code-based webframe, created by a private Vercel company, which allows you to develop web-based web-based web apps on the server side and generation of static websites.\n\nReact documentation mentions Next.js among \"Recommended tools\" and recommends that it is developed when creating a server website using Node.js. While traditional React sites can only reproduce their contents in the client's side, Next.js expands this functionality, adding the website to generate the website on the server side.\n\nCopyright and trademarks for Next.js belong to Vercel, which supports and heads the development of framework as an open source software.",
    "count_one": "{{count}} item",
    "count_other": "{{count}} items",
    "counter": "Counter",
    "learn": "Click on the Vite and React logos to learn more",
    "less": "<0>What is LESS?</0><p>LESS (Leaner Style Sheets) is a CSS preprocessor that extends CSS with dynamic features like variables, functions, and mixins.</p><p>It helps developers write reusable and maintainable stylesheets, reducing repetition in code.</p><p>LESS compiles into standard CSS and works seamlessly with existing CSS files.</p><p>It supports nested rules, making styling more structured and readable.</p><p>LESS can be used on both client-side and server-side, making it flexible for different projects.</p><6>Learn more on the <2>LESS Wikipedia page</2>.</6>",
    "sass": "<0>What is SASS?</0><p>SASS (Syntactically Awesome Stylesheets) is a preprocessor that extends CSS with features like variables, nesting, and mixins.</p><p>It allows developers to write cleaner, more structured stylesheets and compile them into standard CSS.</p><p>SASS supports two syntaxes: SCSS (modern and widely used) and the older indented syntax.</p><p>Using SASS improves code maintainability, making it easier to manage large projects.</p><p>It is compatible with all versions of CSS and can be used with various front-end frameworks.</p>",
    "w-article": "<0>In Weblate translations are organized into projects and components. Each project can contain number of components and those contain translations into individual languages. The component corresponds to one translatable file (for example<1><0>GNU gettext PO (Portable Object)</0></1> or <5><0>Android string resources</0></5>). The projects are there to help you organize component into logical sets (for example to group all translations used within one application).</0><p>Additionally, components within projects can be structured using categories. Components can belong to a category, and categories can be nested.</p><2>Internally, each project has translations to common strings propagated across other components within it by default. This lightens the burden of repetitive and multi version translation. The translation propagation can be disabled per<1><0>Component configuration</0></1> using <5><0>Allow translation propagation</0></5> in case the translations should diverge.</2>"
}
